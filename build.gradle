plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.GTTF'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {


	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// implementaion : 구현에 필요한 코드
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'


	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// 공백 체크 및 각종 체크를 도와주는 어노테이션을 사용할 수 있게 해주는 Dependency
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// jpa를 사용하겠다는 Dependency

	runtimeOnly 'mysql:mysql-connector-java'
	// MySQL DB를 사용할 수 있게 해주는 Dependency

	runtimeOnly 'com.h2database:h2' //테스트용 DB

	// compileOnly : 컴파일에만 사용하는 코드
	compileOnly 'org.projectlombok:lombok'

	// annotationProcessor : 어노테이션 지정 코드
	annotationProcessor 'org.projectlombok:lombok'

}

test {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}
